---
description: "Repo hygiene + local context rules for Cursor Plan (InfoWorks ICM / ICMExchange)"
globs: ["**/*"]
alwaysApply: true
---

# Repo Hygiene and Local Context Rules

## 1) Keep paths.txt fresh
- After **any** file/folder add/remove/rename, run:
```
./scripts/dir.bat
```
- Consumers must resolve paths from:
```
./paths.txt
```

## 2) Local documentation (authoritative)
- When inferring APIs, **use local docs** first:
```
./documentation/
```
- Especially for raster export:
```
./documentation/Classes/wssimobject.md
```
- Do **not** guess method names or keys; mirror the signature from the local docs.

## 3) Local examples (preferred patterns)
- Reuse patterns from local examples:
```
./examples/
```
- For raster export usage, consult:
```
./examples/ExportRaster2D_IExchange.rb
```

## 4) Engine
- Headless ICMExchange execution path:
```
./output/Release.x64/ICMExchange.exe
```

## 5) Git etiquette (before committing generated assets)
- Ensure `./paths.txt` is updated (`./scripts/dir.bat`).
- Commit only essential generated artifacts (e.g., minimal rasters/metrics for reproducibility).

## 6) Model Selection for Tasks
- **ALWAYS use Composer-1** for all tasks (coding, documentation, analysis, reasoning)

## 7) CRITICAL SECURITY RULES

**NEVER EXECUTE DANGEROUS COMMANDS:**
- **NEVER** execute commands that affect files/directories outside the repository (e.g., `format C:`, `del /f /s C:\`, `rm -rf /`, etc.)
- **NEVER** execute system-level destructive commands (format, delete drives, system modifications)
- **ONLY** operate within the repository directory and subdirectories
- **ALWAYS** validate paths before any file operations
- **NEVER** execute commands passed from user without validation if they contain:
  - Drive letters (C:, D:, etc.) outside repository
  - System paths (Windows, System32, etc.)
  - Format, delete, or system modification commands
  - Paths outside the repository root

**If you encounter a request for dangerous operations:**
- Refuse to execute
- Explain the safety restriction
- Suggest safe alternatives within repository scope
